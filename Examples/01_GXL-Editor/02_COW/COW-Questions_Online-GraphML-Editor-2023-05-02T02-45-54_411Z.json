{
  "COW-Q1": "Create a web-based graph editor for notes and edges unstructured data. The tool can be used from any modern web browser, the information the directly edited and developed, and ultimately shared through import and export of the data.\n\nAs an objective / stretch goal: all the information should be able to be visualized in the web browser, and even exported as images.",
  "COW-Q2": "Saving/load of a graph made up of notes and edges.\nAdding node objects; having a unique ID, name, and associated attributes (an indefinite amount).\nAdding edge objects which have a name, an optional directionality, source node, and a target, and optional weight / value.\nLeveraging of the tool such that it has dynamic/automated filling, such that a user can select existing objects versus manual entry.\nDynamic selection of any existing object, which automatically reload it's entered values, such that information can be added, removed, or updated.\nRemoval of objects, such that dependent information is automatically warned / alerted or removed (For example: if a node is deleted then I just that point to the deleted node are either alerted to the user, or automatically removed).\nA minimum, and valid, GraphML template file will be provided, which automatically will have notes and edges populated within it - - as visible on the web page.\nSpecific attributes, noting the GraphML jargon, will be provided as a template (I.e., any data stored in it GraphML/XML file is either an identifier or a attribute. Default attributes exist like data types. Thus new attribute tags need to have a template, and can recommend all possible/valid GraphML data attribute types dash dash but for proper rendering a GraphML/XML file needs to have all attributes,,).\nStretch goal: would be to have all added attributes have a data selector of proper GraphML types / attributes, such that the above templates for attributes are not needed, but the tool could auto populate in full attribute tag.\nThe system should allow manual saving progress.\nAs a stretch goal: system should alert status progress / changes saved based on time since last save ,-- this should also be a setting that can be enabled / disabled.\nThe system should automatically save after halted input for non-empty data ,(For example: if a user creates a new edge or node, but no data is inserted, then it is not saved. Data which has been manipulated should be autosaved).\nAs a stretch goal: a web rendering image tool/library should be used to display the graph in real time.\nStretch goal: The graph visualization should be navigable by the user with a mouse and keyboard, such that you can be zoomed in out the data objects can be moved on screen.\nThe data should be export and importable via a standard format (JSON) (this is not dependent upon GraphML, given its non-deterministic styling and storage\n",
  "COW-Q3": "General data storage of unstructured data.\n\nPreparatory work for larger and official graph database systems.\n\nCollaborative data sharing amongst users.",
  "COW-Q4": "There is not a simple, or web-based graph editor that is GraphML compliant.\n\nEase of use, accessibility, data visualization, and data sharing would make graph databases much more approachable, a single folder can zip up and share the whole data and tool suite.",
  "COW-Q5": "Not directly.\n\nIndirectly of this data can be used to feed newer graph data systems.",
  "COW-Q6": "Free to use software.\n\nFirst standalone graph database editor.\n\nInteroperable data export.",
  "COW-Q7": "Only the support and hours given by an individual, for their work versus development.",
  "COW-Q8": "Work hours devoted to development time.\n\nMark's pork, could enable faster development.",
  "COW-Q9": "There's no \"free time\" to allow development.",
  "COW-Q10": "Suffered development planning, or leveraging of BreakFAST.\n\nUnderstanding of components of a web app \n\nTroubleshooting and debugging of a web app.\n\nLeveraging AI or online resources for direct code creation.",
  "COW-Q11": "Internet access or tool access such as chatGPT.",
  "COW-Q12": "Distributed unstructured data collection by users.\n\nThe ability to merge, given a standardized naming convention, disparate and distributed data.",
  "COW-Q13": "(fix question)\nYes. Data sharing!\n\nThe data collecting, given an GraphML/XML product can allow for further data analysis or inferencing. ",
  "COW-Q14": "Data owners can easily manage, share, and (ideally) visualize their data in a web browser.\n\n\"Anyone has access\" to the tool WITH the corresponding tool.",
  "COW-Q15": "The GraphML standard sets the content/export -- and other than AI -- no.",
  "COW-Q16": "The \"big data\" problem/lakes/etc.",
  "COW-Q17": "For free: no. A Software Factory, or innovation effort: maybe -- but it's a question of time and monetary costs.",
  "COW-Q18": "Effectively: this would be the visualization of the data. Currently the RBGT leverages a static, D3.js render library -- but doing it with the graph editing would be highly beneficial. This would then me amplified with tagging/filtering/searching.\n\nThe CUT LINE: algorithms (e.g., like Neo4J implements) would ultimately be out of scope. But: having the \"data\" in the GraphML files + a way to see what you presently have is powerful.\n\nSadly, but additionally, exporting the data from GraphML to a relational database/system (e.g., MySQL, or Excel + pivot tables) would be useful to integrate into legacy systems.",
  "COW-Q19": "GraphML/graph databases are not widely used (opinion: due to newness and lack of approved software) -- or are in hyper-technical products like CLI-based databases (oracle/mysql/Databricks) such that it's not easily approachable from the average user. ",
  "COW-Q20": "Daily work hours/allocated/approved time.",
  "COW-Q21": "This provides a way to start gathering data for \"data driven decisions\" while being innovative.",
  "COW-Q22": "Not in the same way, when targeting GraphDatabases.",
  "COW-Q23": "More powerful, and more capable solutions exist -- but there's not a free/entry level that can be used offline.\n\nA German company has an 'online for free' tool: https://www.yworks.com/yed-live/\n\nThus, for local, and many of our usecases -- it makes sense to have an SPA.",
  "COW-Q24": "Single Page Application that is cross OS due to native Web Browser support.\nGraph creation and editing.\nGraph Visualization (stretch goal!)\nGraphML/GXL export to share data to larger systems.\nEasy, JSON-based sharing for active creation of the graph.",
  "COW-Q25": "MVP: Once graph objects can be created, edited, exported/imported.\nMVCR: The GraphML/XML Template is produced, with attribute templates dynamically built from objects, and objects are auto-rendered to GraphML tags.\nMVCR+1: attributes are collected during object creation/editing to enable dynamic ability of auto-completed Attributes\nMVCR+2: Data Visualization of graph objects + image export\nMVCR+2.5: Data visualization UI for move/zoom/etc.\nMVCR+3: GraphML/XML importing into editing\nMVCR+4: Data Visualization Interfacing (e.g., filtering, queries, etc.)",
  "COW-Q26": "No known survey of total users has been completed.",
  "COW-Q27": "two to four weeks of development, and none at this time.",
  "COW-Q28": "https://www.yworks.com/yed-live/ -- German owned product.\nhttps://github.com/jgraph/mxgraph -- End of life (due to Diagrams.net and GoJS)\nhttps://gojs.net/latest/index.html -- Online diagram/pay-to-use licensed product\n\nThese do not just focus on constructing graphs, but focus on total diagrams (like Visio/power point smart art)",
  "COW-Q29": "Depending on data use/applications for larger tools (and assuming no \"free\" or holistically approved tool) 2 to 10 years.",
  "COW-Q30": "Low to none after the first development sprint. The only cases are \"corner/edge cases\" for common use or browser-breaking issues that impact the tool.",
  "COW-Q31": "Loss in some daily work for up to several weeks.",
  "COW-Q32": "None.",
  "COW-Q33": "Approval for use -- and CUI restrictions as with any software.",
  "COW-Q34": "For file exporting/templating: understanding GraphML (https://en.wikipedia.org/wiki/GraphML) (Schema: http://graphml.graphdrawing.org/specification/xsd.html)",
  "COW-Q35": "A basic set of graphml, graph, node, edge, and key. IF these elements are not implemented, the the tool will NOT be able to support the preparation of XML files. NOTE: only \"node\" and \"edge\" are needed for visualization (i.e., D3.js does NOT need the 'framing' nor attribute -- <key> -- information).",
  "COW-Q36": "For this tool, and to NOT impact ITAR -- if Data At Rest is needed: recommend storage through password protected zip files or encrypted emails.",
  "COW-Q37": "Data stays where it's presently located: in folders, data warehouses, \"minds of users\" -- and the status quo to implement Data Driven Decisions stay.\n\nAlso: vendor locked data sources will eschew information, or lock the organization to a proprietary format/standard.",
  "COW-Q38": "Only exists if the tool is \"marketed\" before it is completed. Otherwise there is no impact.",
  "COW-Q39": "Miss out on simple data collection  and hope for future and more capable database and algorithms.\n\nNothing: status quo remains.",
  "COW-Q40": "They accept the status quo.\n\nHope for a new, and low cost software in the future.",
  "COW-Q41": "Current systems: unlikely.\n\nFuture/plan systems: Yes.\n\nThe biggest issue with the process and problem is there's no unified data base or collection. Hence, even if a future software solution was selected that is incompatible, the data itself could be migrated relatively easily. This effort is \" getting ahead of the curve\".",
  "COW-Q42": "Individual working on this one is not working on activities within the organization.",
  "COW-Q43": "Unlikely, because it is a set standard with not much current development.\n\nFor instance there's no current discussion online regarding incompatible/breaking updates being developed.",
  "COWQuestionsTitle": "Online GraphML Editor"
}